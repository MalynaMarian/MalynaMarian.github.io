3 способи підключення CSS (підключення через файл)
Приорітет підключення css (В тезі, в head, файл)
Види селекторів (по тегу,клас,ідентифікатор)
Стиль дочірнього елемента має перевагу над стилем батьківського (якщо атрибути в обидвох указанні то застосуються дані атрибутів від дочірнього стилю) 
Перекриття стилів, якщо в бактьківському стилі указанні одні атрибути, а в дочірньому - інші, то дочірній стиль також візьме атрибути з настройками від батьківського (селектор - тег)
Селектор клас доміную над селектором тегом
Селектор індентифікатор домінує над селектором класом

Конструкції селекторів (Вложені, мультікласи,сусідні)

CSS
https://habrahabr.ru/post/137588/
http://css.yoksel.ru/specifity/
http://htmlbook.ru/samcss/vvedenie-v-css


JavaScript
1) Var a = 10; локальна змінна
    a = 10; глобальна змінна
2) Типи даних
  елементарні типи : (Числа(Number), Строки(String), Логічні значення(Boolean))
  тривіальні типи : (null - отсутствие значения, undefined - неопределенное значение )
  Составные типы : (Объект(Object), Массив(Array))
  Спеціальний тип : (Функція(function))

3)Конкатенация - склеивание объектов линейной структуры , строк
  Когда используем оператор + для двух строковых переменных , тогда этот оператор + называется конкатенацией.
4)Прості методи
  document.write (вводить любу кількість аргументів переданих, преобразовує все в строку)
  document.writeln (аналогія, добавляє перевод строки)
  alert діалоове вікно
  Метод prompt(1, 2) - принимает два аргумента: 
            1 - выводится в качестве простой строки в модальном окне.
            2 - значение по умолчанию в текстовом поле для ввода.

        Метод prompt(1, 2) - выводит сообщение в окне с текстовым полем и двумя кнопками: "ОК" и "ОТМЕНА".

        Метод prompt(1, 2) - возвращает введенное значение или null, если пользователь нажал на кнопку "ОТМЕНА".

        Как и в alert, prompt - модальное окно 
        (пользователь не может продолжить работу, пока не нажмет на одну из кнопок).
  confirm() - [подтвердить], действует похоже на alert, за исключением того, 
        что добавляет кнопку "Отмена" в диалоговое окно.
        Возвращает true, если нажата кнопка - OK или false , если нажата кнопка - Cancel.

5)      // Конвертация строкового значения в числовое:
        // parseFloat() конвертация в вещественное значение.
        // parseInt() конвертация в целочисленное значение.
        // Данные функции возвращают значение NaN если конвертация не удалась.

6) Оператори
   Основні арафметичні оператори 
   1)(+ - * /)
   2)reminder (%) - остаток від ділення (Деление по модулю)
   3)   var a = -8;
        var string = "10";

        // Унарный минус (-)
        result = -a; // Операция смены знака на противоположный.
        document.write("-a = " + result + "<br />");

        // Унарный плюс (+)
        // не изменяет знака при применении к числовому типу (ничего не происходит). 
        result = +a;
        document.write("+a = " + result + "<br />");

        // Унарный плюс (+)
        // при применении к строковому типу, преобразовывает его в числовой.
        result = +string + a;
        document.write("+string + a = " + result + "<br />");
   4)Інкремент a++ Постфиксный инкремент
               ++a префиксный инкремент
   5)Декремент a-- ; --a

   Операторы равенства
   1)Оператор присвоения =
   2)Оператор равенства == (результат true або false (1 або 0)) (прирівнює різні типи даних )
        Оператор равенства "==" предназначен для сравнения значений двух переменных, 
        при этом необходимо помнить о следующих правилах:
        
             1. если одно значение null а другое undefined - значения равны.
             2. если одно значение число, а второе строка, то строка преобразоваться в число и производиться сравнение.
             3. если одно значение true оно преобразуется в 1, если значение false оно преобразоваться в 0.
   3) Идентичность - требует совпадения типа и значения переменной, 
    когда для равенства достаточно только совпадающих значений.

    Оператор идентичности "===" предназначен для проверки значений двух переменных на идентичность, 
    при этом необходимо помнить о следующих правилах:
        
        1. если значения имеют разные типы они не идентичны.
        2. если значения являются числами имеют одинаковые значения и не являются значения NaN - они идентичны.
        3. если две строки имеют одинаковую длину и содержат одни и те же символы - они идентичны.
        4. два одинаковых логических значения идентичны.
   4)Оператор неравенства "!=" возвращает противоположное значение оператора равенства.
        Оператор неидентичности "!==" возвращает противоположное значение оператора идентичности.
   5)     Повертається булевий тип данних  True False 
        var a = 10;
        var b = 20;
        var res;
        // Меньше (<)
        res = a < b;
        document.write("a < b " + res + "<br />"); //True

        // Больше (>)
        res = a > b;
        document.write("a > b " + res + "<br />"); //False

        // Меньше или равно (<=)
        res = a <= b;
        document.write("a <= b " + res + "<br />");

        // Больше или равно (>=)
        res = a >= b;
        document.write("a >= b " + res + "<br />");

    Логические Операторы
    1)Коньюнция && означає  Логическое И (a && b = a и b)
    2)Дезюнкция || означає Логическое ИЛИ


ЛЕКЦІЯ 2
Условные конструкции
 IF ELSE
 ? :
 SWITCH - CASE